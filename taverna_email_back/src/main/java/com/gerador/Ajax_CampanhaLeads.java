package com.gerador; 
import com.funcs.Utilitario; 
import java.util.Date; 
import javax.servlet.http.HttpServletRequest; 
import javax.servlet.http.HttpServletResponse; 
import org.json.simple.JSONObject; 
import java.sql.Connection; 
import java.text.SimpleDateFormat; 
import java.io.PrintWriter; 
import org.json.simple.JSONArray; 

public class Ajax_CampanhaLeads{ 

 public void carregaUnicoAjax(HttpServletRequest request, HttpServletResponse response, Connection conn ) throws Exception{  JSONObject retorno = new JSONObject();	PrintWriter out = response.getWriter();  String pk = request.getParameter("id_lead") == null ? "" : request.getParameter("id_lead");   	if (!Utilitario.isNumeric(pk)) { throw new Exception("Parâmetro inválido!"); } 	CampanhaLeads obj = new CampanhaLeads(conn);  	obj.setIdLead( Long.parseLong(pk) ); 	obj.lista(); 	if(obj.next()){retorno.put("id_campanha", obj.getIdCampanha() == null ? 0 : obj.getIdCampanha() );retorno.put("id_lead_referencia", obj.getIdLeadReferencia() == null ? 0 : obj.getIdLeadReferencia() );retorno.put("desc_email", obj.getDescEmail() == null ? "" : obj.getDescEmail() );retorno.put("desc_link_referal", obj.getDescLinkReferal() == null ? "" : obj.getDescLinkReferal() ); 	} 	retorno.put("msg", ""); 	retorno.put("msgok", "ok"); 	out.print(retorno.toJSONString()); } public void SaveAjax(HttpServletRequest request, HttpServletResponse response, Connection conn ) throws Exception{  JSONObject retorno = new JSONObject();	PrintWriter out = response.getWriter();  String id_lead = request.getParameter("id_lead") == null ? "" : request.getParameter("id_lead");   String id_campanha = request.getParameter("id_campanha") == null ? "" : request.getParameter("id_campanha");   String id_lead_referencia = request.getParameter("id_lead_referencia") == null ? "" : request.getParameter("id_lead_referencia");   String desc_email = request.getParameter("desc_email") == null ? "" : request.getParameter("desc_email");   String desc_link_referal = request.getParameter("desc_link_referal") == null ? "" : request.getParameter("desc_link_referal");   	if (!Utilitario.isNumeric(id_lead)) { throw new Exception("Parâmetro inválido!"); } 	if (!Utilitario.isNumeric(id_campanha)) { throw new Exception("Parâmetro inválido!"); } 	if (!Utilitario.isNumeric(id_lead_referencia)) { throw new Exception("Parâmetro inválido!"); } if(desc_email.equalsIgnoreCase("")){ throw new Exception("Campo desc_email esta em branco!"); }  if(desc_link_referal.equalsIgnoreCase("")){ throw new Exception("Campo desc_link_referal esta em branco!"); }  	CampanhaLeads obj = new CampanhaLeads(conn);  	obj.setIdLead( Long.parseLong(id_lead) ); 	obj.setIdCampanha( Long.parseLong(id_campanha) ); 	obj.setIdLeadReferencia( Long.parseLong(id_lead_referencia) ); 	obj.setDescEmail( desc_email ); 	obj.setDescLinkReferal( desc_link_referal ); 	obj.insert(); 	obj.update(); 	retorno.put("msg", ""); 	retorno.put("msgok", "ok"); 	out.print(retorno.toJSONString()); } public void ListaAjax(HttpServletRequest request, HttpServletResponse response, Connection conn ) throws Exception{  JSONObject retorno = new JSONObject();JSONObject objjson = new JSONObject();	PrintWriter out = response.getWriter(); JSONArray array = new JSONArray(); String id_lead = request.getParameter("id_lead") == null ? "" : request.getParameter("id_lead");   String id_campanha = request.getParameter("id_campanha") == null ? "" : request.getParameter("id_campanha");   String id_lead_referencia = request.getParameter("id_lead_referencia") == null ? "" : request.getParameter("id_lead_referencia");   String desc_email = request.getParameter("desc_email") == null ? "" : request.getParameter("desc_email");   String desc_link_referal = request.getParameter("desc_link_referal") == null ? "" : request.getParameter("desc_link_referal");   	if (!Utilitario.isNumeric(id_lead)) { throw new Exception("Parâmetro inválido!"); } 	if (!Utilitario.isNumeric(id_campanha)) { throw new Exception("Parâmetro inválido!"); } 	if (!Utilitario.isNumeric(id_lead_referencia)) { throw new Exception("Parâmetro inválido!"); } if(desc_email.equalsIgnoreCase("")){ throw new Exception("Campo desc_email esta em branco!"); }  if(desc_link_referal.equalsIgnoreCase("")){ throw new Exception("Campo desc_link_referal esta em branco!"); }  	CampanhaLeads obj = new CampanhaLeads(conn);  if(!id_lead.equalsIgnoreCase("")){   	obj.setIdLead( Long.parseLong(id_lead) ); } if(!id_campanha.equalsIgnoreCase("")){   	obj.setIdCampanha( Long.parseLong(id_campanha) ); } if(!id_lead_referencia.equalsIgnoreCase("")){   	obj.setIdLeadReferencia( Long.parseLong(id_lead_referencia) ); } if(!desc_email.equalsIgnoreCase("")){   	obj.setDescEmail( desc_email ); } if(!desc_link_referal.equalsIgnoreCase("")){   	obj.setDescLinkReferal( desc_link_referal ); } 	obj.lista(); 	while(obj.next()){objjson = new JSONObject();objjson.put("id_lead", obj.getIdLead() == null ? 0 : obj.getIdLead() );objjson.put("id_campanha", obj.getIdCampanha() == null ? 0 : obj.getIdCampanha() );objjson.put("id_lead_referencia", obj.getIdLeadReferencia() == null ? 0 : obj.getIdLeadReferencia() );objjson.put("desc_email", obj.getDescEmail() == null ? "" : obj.getDescEmail() );objjson.put("desc_link_referal", obj.getDescLinkReferal() == null ? "" : obj.getDescLinkReferal() );array.add(objjson); 	} 	retorno.put("lista", array); 	retorno.put("msg", ""); 	retorno.put("msgok", "ok"); 	out.print(retorno.toJSONString()); }
 
 }