package com.gerador; 
import com.funcs.Utilitario; 
import java.util.Date; 
import javax.servlet.http.HttpServletRequest; 
import javax.servlet.http.HttpServletResponse; 
import org.json.simple.JSONObject; 
import java.sql.Connection; 
import java.text.SimpleDateFormat; 
import java.io.PrintWriter; 
import org.json.simple.JSONArray; 

public class Ajax_UserPremios{ 

 public void carregaUnicoAjax(HttpServletRequest request, HttpServletResponse response, Connection conn ) throws Exception{  JSONObject retorno = new JSONObject();	PrintWriter out = response.getWriter();  String pk = request.getParameter("id_premio") == null ? "" : request.getParameter("id_premio");   	if (!Utilitario.isNumeric(pk)) { throw new Exception("Parâmetro inválido!"); } 	UserPremios obj = new UserPremios(conn);  	obj.setIdPremio( Long.parseLong(pk) ); 	obj.lista(); 	if(obj.next()){retorno.put("id_usuario", obj.getIdUsuario() == null ? 0 : obj.getIdUsuario() );retorno.put("desc_name", obj.getDescName() == null ? "" : obj.getDescName() );retorno.put("desc_extensao", obj.getDescExtensao() == null ? "" : obj.getDescExtensao() );retorno.put("desc_path", obj.getDescPath() == null ? "" : obj.getDescPath() ); 	} 	retorno.put("msg", ""); 	retorno.put("msgok", "ok"); 	out.print(retorno.toJSONString()); } public void SaveAjax(HttpServletRequest request, HttpServletResponse response, Connection conn ) throws Exception{  JSONObject retorno = new JSONObject();	PrintWriter out = response.getWriter();  String id_premio = request.getParameter("id_premio") == null ? "" : request.getParameter("id_premio");   String id_usuario = request.getParameter("id_usuario") == null ? "" : request.getParameter("id_usuario");   String desc_name = request.getParameter("desc_name") == null ? "" : request.getParameter("desc_name");   String desc_extensao = request.getParameter("desc_extensao") == null ? "" : request.getParameter("desc_extensao");   String desc_path = request.getParameter("desc_path") == null ? "" : request.getParameter("desc_path");   	if (!Utilitario.isNumeric(id_premio)) { throw new Exception("Parâmetro inválido!"); } 	if (!Utilitario.isNumeric(id_usuario)) { throw new Exception("Parâmetro inválido!"); } if(desc_name.equalsIgnoreCase("")){ throw new Exception("Campo desc_name esta em branco!"); }  if(desc_extensao.equalsIgnoreCase("")){ throw new Exception("Campo desc_extensao esta em branco!"); }  if(desc_path.equalsIgnoreCase("")){ throw new Exception("Campo desc_path esta em branco!"); }  	UserPremios obj = new UserPremios(conn);  	obj.setIdPremio( Long.parseLong(id_premio) ); 	obj.setIdUsuario( Long.parseLong(id_usuario) ); 	obj.setDescName( desc_name ); 	obj.setDescExtensao( desc_extensao ); 	obj.setDescPath( desc_path ); 	obj.insert(); 	obj.update(); 	retorno.put("msg", ""); 	retorno.put("msgok", "ok"); 	out.print(retorno.toJSONString()); } public void ListaAjax(HttpServletRequest request, HttpServletResponse response, Connection conn ) throws Exception{  JSONObject retorno = new JSONObject();JSONObject objjson = new JSONObject();	PrintWriter out = response.getWriter(); JSONArray array = new JSONArray(); String id_premio = request.getParameter("id_premio") == null ? "" : request.getParameter("id_premio");   String id_usuario = request.getParameter("id_usuario") == null ? "" : request.getParameter("id_usuario");   String desc_name = request.getParameter("desc_name") == null ? "" : request.getParameter("desc_name");   String desc_extensao = request.getParameter("desc_extensao") == null ? "" : request.getParameter("desc_extensao");   String desc_path = request.getParameter("desc_path") == null ? "" : request.getParameter("desc_path");   	if (!Utilitario.isNumeric(id_premio)) { throw new Exception("Parâmetro inválido!"); } 	if (!Utilitario.isNumeric(id_usuario)) { throw new Exception("Parâmetro inválido!"); } if(desc_name.equalsIgnoreCase("")){ throw new Exception("Campo desc_name esta em branco!"); }  if(desc_extensao.equalsIgnoreCase("")){ throw new Exception("Campo desc_extensao esta em branco!"); }  if(desc_path.equalsIgnoreCase("")){ throw new Exception("Campo desc_path esta em branco!"); }  	UserPremios obj = new UserPremios(conn);  if(!id_premio.equalsIgnoreCase("")){   	obj.setIdPremio( Long.parseLong(id_premio) ); } if(!id_usuario.equalsIgnoreCase("")){   	obj.setIdUsuario( Long.parseLong(id_usuario) ); } if(!desc_name.equalsIgnoreCase("")){   	obj.setDescName( desc_name ); } if(!desc_extensao.equalsIgnoreCase("")){   	obj.setDescExtensao( desc_extensao ); } if(!desc_path.equalsIgnoreCase("")){   	obj.setDescPath( desc_path ); } 	obj.lista(); 	while(obj.next()){objjson = new JSONObject();objjson.put("id_premio", obj.getIdPremio() == null ? 0 : obj.getIdPremio() );objjson.put("id_usuario", obj.getIdUsuario() == null ? 0 : obj.getIdUsuario() );objjson.put("desc_name", obj.getDescName() == null ? "" : obj.getDescName() );objjson.put("desc_extensao", obj.getDescExtensao() == null ? "" : obj.getDescExtensao() );objjson.put("desc_path", obj.getDescPath() == null ? "" : obj.getDescPath() );array.add(objjson); 	} 	retorno.put("lista", array); 	retorno.put("msg", ""); 	retorno.put("msgok", "ok"); 	out.print(retorno.toJSONString()); }
 
 }